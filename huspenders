#!/bin/zsh

# Start a new Haskell project named $1.
# It's an executable (not a library) so that `cabal run` is set up, because
# that's my most common type of project.

set -e

usage() {
  print "Usage: huspenders projectname"
  exit 64
}

if [[ -z "$1" ]]; then
  usage
fi

autoload -Uz colors && colors

cabal_init_executable(){
  fullname=$(finger $(whoami) | awk '/Name:/ {print $4" "$5}')

  cabal init \
    --non-interactive \
    --package-name "$1" \
    --license MIT \
    --synopsis "This is a required synopsis" \
    --is-executable \
    --main-is="Main.hs" \
    --author="$fullname" \
    --source-dir=src
}

projectname=$1
cabalfile="${projectname}.cabal"
print "Cool, creating a project named ${fg_bold[yellow]}${projectname}${reset_color}"

mkdir "$projectname"
cd "$projectname"

cabal sandbox init
cabal_init_executable "$projectname"
# Strip whitespace, because cabal doesn't
sed -i '' 's/ +$//g' *cabal

cat > "src/Main.hs" <<PROJECT
module Main where

  main = putStrLn "It works!"
PROJECT

git init
cat >> .gitignore <<GITIGNORE
.cabal-sandbox/
cabal.sandbox.config
dist/
GITIGNORE

# Make sure everything's installed and runs correctly
cabal update
cabal install
cabal run

print "${fg_bold[green]}cd $projectname, edit src/Main.hs, run it with \`cabal run\`${reset_color}"
